syntax = "proto3";

package books.v1;

import "google/api/annotations.proto";

option go_package = "books/v1";

// A service to managed books.
service BookService {

    // Returns a list of projects.
    rpc ListBooks(ListBooksRequest) returns(ListBooksResponse) {
        option (google.api.http) = {
            get: "/v1/books"
        };
    }

    // Returns a book with the given title.
    rpc GetBook(GetBookRequest) returns(GetBookResponse) {
        option (google.api.http) = {
            get: "/v1/books/{title}"
        };
    }
    
    // Creates a new book. If the book already exists then it
    // will return an 'ALREADY_EXISTS' error.
    rpc CreateBook (CreateBookRequest) returns(CreateBookResponse) {
        option (google.api.http) = {
            post: "/v1/books",
            body: "*"
        };
    }
    
    // Updates an existing book with the given title.
    rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse) {
        option (google.api.http) = {
            put: "/v1/books/{title}"
            body: "book"
        };
    }
    
    // Deletes a book with the given name.
    rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse) {
        option (google.api.http) = {
            delete: "/v1/books/{title}"
        };
    }
}

// Definition of a book
message Book {
    // Required. The title of the book.
    string title = 1;
}

// Request for the `ListBooks` method.
message ListBooksRequest {}

// Response for the `ListBooks` method.
message ListBooksResponse {

    // List of books that are stored in the service.
    repeated Book books = 1;
}

// Request for the `GetBook` method.
message GetBookRequest {
    string title = 1;
}

// Response for the `GetBook` method.
message GetBookResponse {
    // Resulting book that matches the `title` in the request.
    Book book = 1;
}

// Request for the `CreateBook` method.
message CreateBookRequest {
    // Required. The title of the book to create.
    string title = 1;
}

// Response for the `CreateBook` method.
message CreateBookResponse {
    // The created book.
    Book book = 1;
}

// Request for the `UpdateBook` method.
message UpdateBookRequest {
    // Required. The title of the book to update.
    string title = 1;

    // Required. The updated data that will be applied
    // to the book that matches the `title`.
    Book book = 2;
}

// Response for the `UpdateBook` method.
message UpdateBookResponse {
    // The updated book.
    Book book = 1;
}

// Request for `DeleteBook` method.
message DeleteBookRequest {
    // Required. The title of the book to delete.
    string title = 1;
}

// Response for `DeleteBook` method.
message DeleteBookResponse {
    // Flag to indicate if the delete operation was successful.
    bool done = 1;
}
